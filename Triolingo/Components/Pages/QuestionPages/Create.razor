@page "/questions/create"
@using Microsoft.EntityFrameworkCore
@using Triolingo.Domain
@using Triolingo.Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IDbContextFactory<Triolingo.Data.TriolingoContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Question</PageTitle>

<h1>Create</h1>

<h2>Question</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Question" OnValidSubmit="AddQuestion" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="mb-3">
                <label for="questiontext" class="form-label">Question Text:</label>
                <InputText id="questiontext" @bind-Value="Question.QuestionText" class="form-control" />
                <ValidationMessage For="() => Question.QuestionText" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="correctanswer" class="form-label">Correct Answer:</label>
                <InputText id="correctanswer" @bind-Value="Question.CorrectAnswer" class="form-control" />
                <ValidationMessage For="() => Question.CorrectAnswer" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="quizid" class="form-label">QuizId:</label>
                <InputNumber id="quizid" @bind-Value="Question.QuizId" class="form-control" />
                <ValidationMessage For="() => Question.QuizId" class="text-danger" />
            </div>

            <!-- Read-only CreatedBy field -->
            <div class="mb-3">
                <label for="createdby" class="form-label">Created By:</label>
                <InputText id="createdby" @bind-Value="Question.CreatedBy" class="form-control" readonly />
                <ValidationMessage For="() => Question.CreatedBy" class="text-danger" />
            </div>

            <!-- Hidden DateCreated field -->
            <div class="mb-3" hidden>
                <label for="datecreated" class="form-label">Date Created:</label>
                <InputDate id="datecreated" @bind-Value="Question.DateCreated" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/questions">Back to List</a>
</div>

@code {
    private string userId = string.Empty;
    [SupplyParameterFromForm]
    private Question Question { get; set; } = new();
    private List<QuizOption> Quizzes = new();

    private class QuizOption
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
    }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userEmail = authState.User.Identity?.Name;
        if (!string.IsNullOrEmpty(userEmail))
        {
            Question.CreatedBy = userEmail;
        }
    }

    private async Task AddQuestion()
    {
        using var context = DbFactory.CreateDbContext();
        Question.DateCreated = DateTime.Now;
        context.Question.Add(Question);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/questions");
    }
}
